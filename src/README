//Niklas Jonsson
//Simon Moos
//Grupp 13

b)
Utskrift:
k=5
a=1
b=0

k blir 5 för att den definieras till 5 och aldrig ändras,
endast den nya variabeln n i changeValues som får k:s värde
ökas en gång (men används aldrig).

a blir 1 för att CounterModel till skillnad från int
är en referenstyp så c1 i changeValues och a har samma
referensvärde och pekar på samma objekt.

b blir 0 för att man säger åt c2 att referera till en ny CounterModel
i changeValues, inte samma som b.


c)
Om variabeln 'value' ändras till static så är det en klassvariabel
och inte en instansvariabel. Variabeln hör till klassen i stället
får till varje instans av klassen och skulle alltid vara samma för
samtliga instanser av CounterModel.

NbrOfCounters borde vara en klassmetod då antalet skapade counters
hör till hela klassen och inte någon specifik instans.


e)
Två räklnare som är lika har enligt oss om de kan tolkas som samma instanstyp
och har samma value och modulus. Man skulle också kunna tänka sig att
definiera equals som att bara värdet är samma på räknarna och att resterande
egenskaper inte spelar någon roll, men vi valde inte att göra på det sättet.

h)
När man anropar increment på en FastCounter så ökas värdet med 1, precis
som på en vanlig CounterModel. Det är up/downMany som stegar fortare.